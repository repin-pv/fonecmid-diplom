&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    	
	ВнешняяОбработка = РеквизитФормыВЗначение("Объект");
	
	// если обработка открыта из справочника проверим заполненность ссылки 
	Параметры.Свойство("ДополнительнаяОбработкаСсылка", ДополнительнаяОбработкаСсылка);
	
	// если пустая значит открытие из вне, нужно поискать ее в справочнике
	Если ДополнительнаяОбработкаСсылка.Пустая() Тогда
		
		ДополнительнаяОбработкаСсылка = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(ВнешняяОбработка.Метаданные().Синоним);
		
	КонецЕсли;
	
	// если забыли добавить в справочник выполнить в фоне не получится :
	ДоступноВыполнениеВФоне = НЕ ДополнительнаяОбработкаСсылка.Пустая(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРасчет()
	
	//создаем структуру параметров расчетов
	ПараметрыРасчета = Новый Структура("Параметр1,Параметр2", 10, 20);
	
	Если ДоступноВыполнениеВФоне Тогда
		
		ДлительнаяОперация = НачатьВыполнениеВФонеНаСервере(ПараметрыРасчета);
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультат", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	Иначе
		
		НачатьВыполнитьРасчетНеВФоне(ПараметрыРасчета ); //Не возможно		
		
	КонецЕсли;
	
КонецПроцедуры

//Это расчет в фоне
&НаСервере
Функция НачатьВыполнениеВФонеНаСервере(ПараметрыРасчета)
	
	//ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор); // БСП 3.1
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор); // БСП 3.0
	ВыполняемыйМетод = "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки";
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ДополнительнаяОбработкаСсылка",ДополнительнаяОбработкаСсылка);
	ПараметрыЗадания.Вставить("ИмяМетода", "ВыполнитьРасчетВФоне");
	ПараметрыЗадания.Вставить("ЭтоВнешняяОбработка", Истина);
	ПараметрыЗадания.Вставить("ПараметрыВыполнения",ПараметрыРасчета);
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод,ПараметрыЗадания, ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции 

// Это результат расчета не в фоне
&НаСервере
Процедура НачатьВыполнитьРасчетНеВФоне(ПараметрыРасчета)
	
	ВнешняяОбработка = РеквизитФормыВЗначение("Объект");
	Резултьат = ВнешняяОбработка.ВыполнитьРасчетНеВфоне(ПараметрыРасчета);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультат(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ТекстСообщения = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда 
		
		ТекстСообщения = Результат.ПодробноеПредставлениеОшибки;
		
	КонецЕсли;
	
	Если Результат.Сообщения <> Неопределено Тогда 
		
		Для каждого СообщениеПользователю Из Результат.Сообщения Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла;
		
	КонецЕсли; 
	
	ОбщегоНазначенияКлиент.СообщитьПользователю("Результат: "+ ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	НачалоПериода = НачалоМесяца(Дата(Объект.Период));
	КонецПериода = КонецМесяца(Дата(Объект.Период));
	
	// repin_pv 25.11.23 {{{ Ранний возврат - если не указан ПЕРИОД
	Если Объект.Период = Дата("01.01.0001 0:00:00") Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан МЕСЯЦ");
		Возврат;
		
	КонецЕсли;
	// }}} repin_pv 25.11.23 
		
	//ДлительнаяОперация = НачатьВыполнениеНаСервере(НачалоПериода, КонецПериода);
	//ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультат", ЭтотОбъект);
	//ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	//ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);	
	
КонецПроцедуры

//&НаСервере
//Функция НачатьВыполнениеНаСервере(НачалоПериода, КонецПериода)
//	
//	//ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);				
//	Возврат ДлительныеОперации.ВыполнитьПроцедуру(,"ВнешняяОбработка.ЭтотОбъект.СоздатьДокументыНаСервере", НачалоПериода, КонецПериода); 
//		
//КонецФункции

//&НаКлиенте
//Процедура ОбработатьРезультат(Результат, ДополнительныеПараметры) Экспорт
//	
//	Если Результат = Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//		
//	ПриЗавершенииРасчета();
//	
//КонецПроцедуры

//Процедура ПриЗавершенииРасчета()
//	
//	Сообщить("У нас все получилось!");
//	
//КонецПроцедуры


