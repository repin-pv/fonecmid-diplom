#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НачалоПериода = Объект.ВКМ_ВремяНачалаРабот;
	КонецПериода = Объект.ВКМ_ВремяОкончанияРабот;
	
	Объект.ВКМ_Комментарий = ПолучитьРазностьДатВЧасах(НачалоПериода, КонецПериода);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры 

&НаКлиенте
Процедура ВКМ_ВремяНачалаРаботПриИзменении(Элемент)
	
	НачалоПериода = Объект.ВКМ_ВремяНачалаРабот;
	КонецПериода = Объект.ВКМ_ВремяОкончанияРабот;
	
	Объект.ВКМ_Комментарий = ПолучитьРазностьДатВЧасах(НачалоПериода, КонецПериода);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВКМ_ВремяОкончанияРаботПриИзменении(Элемент)
	
	НачалоПериода = Объект.ВКМ_ВремяНачалаРабот;
	КонецПериода = Объект.ВКМ_ВремяОкончанияРабот;
	
	Объект.ВКМ_Комментарий = ПолучитьРазностьДатВЧасах(НачалоПериода, КонецПериода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область РазмещенияФункций

&НаКлиенте
Функция ПолучитьРазностьДатВЧасах(НачалоПериода, КонецПериода)
	
	РазностьВЧасах = (НачалоМинуты(КонецПериода) - НачалоМинуты(НачалоПериода)) /3600;
	
	КоличествоЧасов = Окр(РазностьВЧасах, 1, 0);
	
	СтрокаЧасовКОплате = " запланировано час(ов)";
	
	Возврат СтрШаблон("%1 %2", КоличествоЧасов, СтрокаЧасовКОплате);
	
КонецФункции

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

   Если Объект.Ссылка.Пустая() Тогда

        ШаблонСообщения = "дата начала %1-%2, исполнитель %3";
        ШаблонТекст = СтрШаблон(ШаблонСообщения, Формат(Объект.ВКМ_ДатаПроведенияРабот, "ДФ=dd.MM.yyyy"),
        Формат(Объект.ВКМ_ВремяНачалаРабот, "ДФ=HH:mm"), Объект.ВКМ_Специалист);
        ТекстТГ = ШаблонТекст;

        ОбъектУведомлениеТГ = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
        ШаблонНаименование = "Новая заявка от %1";
        ОбъектУведомлениеТГ.Наименование = СтрШаблон(ШаблонНаименование, Объект.ВКМ_Клиент);
        ОбъектУведомлениеТГ.Текст = ТекстТГ;

        ОбъектУведомлениеТГ.Записать();

    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВКМ_ОбслуживаниеКлиента",, Объект.Ссылка); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВКМ_ВыполненныеРаботыВКМ_ФактическиПотраченоЧасовПриИзменении(Элемент)

	КоличествоЧасов = Элементы.ВКМ_ВыполненныеРаботы.ТекущиеДанные;
	КоличествоЧасов.ВКМ_ЧасыКОплатеКлиенту = КоличествоЧасов.ВКМ_ФактическиПотраченоЧасов;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти



