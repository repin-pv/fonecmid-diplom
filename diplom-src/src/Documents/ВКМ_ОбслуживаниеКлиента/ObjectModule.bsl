
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(ВКМ_Специалист) Тогда 
		
		ВКМ_Специалист = ПараметрыСеанса.ТекущийПользователь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

    Если НЕ ЭтоНовый() Тогда
		
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
		               |	ВКМ_ОбслуживаниеКлиента.Номер КАК Номер,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист КАК Специалист,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяНачалаРабот КАК ВремяНачалаРабот,
		               |	ВКМ_ОбслуживаниеКлиента.ВКМ_ВремяОкончанияРабот КАК ВремяОкончанияРабот
		               |ИЗ
		               |	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		               |ГДЕ
		               |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка); 
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот Тогда 
			НоваяДата = ВКМ_ДатаПроведенияРабот;
			ШаблонДата = "дата начала" + " " + Формат(НоваяДата, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		
		Если Выборка.ВремяНачалаРабот <> ВКМ_ВремяНачалаРабот Тогда 
			НовоеВремяНачала = ВКМ_ВремяНачалаРабот;
			ШаблонВремяНачало = "время начала" + " " + Формат(НовоеВремяНачала, "ДФ=HH:mm");
		КонецЕсли;
		
		Если Выборка.ВремяОкончанияРабот <> ВКМ_ВремяОкончанияРабот Тогда 
			НовоеВремяОкончания = ВКМ_ВремяОкончанияРабот;
			ШаблонВремяОкончание = "время окончания" + " " + Формат(НовоеВремяОкончания, "ДФ=HH:mm");
		КонецЕсли;
		
		Если Выборка.Специалист <> ВКМ_Специалист Тогда 
			НовыйИсполнитель = ВКМ_Специалист;
			ШаблонИсполнитель = "исполнитель" + " " + НовыйИсполнитель;
		КонецЕсли;
		
		ОбъектУведомлениеТГ = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		ШаблонНаименование = "По документу № %1";
		ОбъектУведомлениеТГ.Наименование = СтрШаблон(ШаблонНаименование, Номер);
		ШаблонСообщения = "Внесены изменения: %2 %3 %4 %5";
		ОбъектУведомлениеТГ.Текст = СтрШаблон(ШаблонСообщения, ШаблонДата, ШаблонВремяНачало, ШаблонВремяОкончание,ШаблонИсполнитель);
		
		ОбъектУведомлениеТГ.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы Приход
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Для Каждого ТекСтрокаВКМ_ВыполненныеРаботы Из ВКМ_ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.КоличествоЧасов = ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ФактическиПотраченоЧасов;
		Движение.СуммаКОплате = ТекСтрокаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту;
	КонецЦикла;

КонецПроцедуры
