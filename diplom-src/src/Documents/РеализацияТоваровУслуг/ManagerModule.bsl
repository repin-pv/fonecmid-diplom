
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// repin_pv 19.11.23 {{{
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт 
	
	//Акт выполненных работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктВыполненныхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Акт выполненных работ'");
	КомандаПечати.Порядок = 5;
    
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктВыполненныхРабот");
	
	Если ПечатнаяФорма <> Неопределено Тогда
		
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАкта(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт выполненных работ'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктВыполненныхРабот";
		
	КонецЕсли;
    
КонецПроцедуры

Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктВыполненныхРабот";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктВыполненныхРабот");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиАктВыполненныхРабот(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати комплектов документов.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.Организация КАК Организация,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.Договор КАК Договор,
		|	РеализацияТоваровУслуг.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Товары,
		|	РеализацияТоваровУслуг.Услуги.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК ИтогоСумма
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
			
КонецФункции

Процедура ВывестиАктВыполненныхРабот(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрокаТаблицы");
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	
	ШаблонЗаголовка = "Акт выполненных работ № %1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
	ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
	Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	
	Огранизация = "%1";
	ТекстОрганизация = СтрШаблон(Огранизация, ДанныеДокументов.Организация);
	
	Контрагент = "%1";
	ТекстКонтрагент = СтрШаблон(Контрагент, ДанныеДокументов.Контрагент);
	
	Основание = "%1";
	ТекстОснования = СтрШаблон(Основание, ДанныеДокументов.Договор);
	
	Итого = "%1 руб";
	ТекстИтого = СтрШаблон(Итого, ДанныеДокументов.ИтогоСумма);
	
	ИтогоПрописью = "(%1)";
	ИтогоСуммаПрописью = ЧислоПрописью(ДанныеДокументов.ИтогоСумма,,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	ТекстИтогоПрописью = СтрШаблон(ИтогоПрописью, ИтогоСуммаПрописью);
	
	СсылкаНаДокумент = ПолучитьНавигационнуюСсылку(ДанныеДокументов.Ссылка);
	ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(СсылкаНаДокумент, 1, 120);
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	
	Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		
		ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
		|Технические подробности см. в журнале регистрации.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
	Иначе
		
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОбластьЗаголовок.Рисунки.МашиночитаемыйКод.Картинка = КартинкаQRКода;
		
	КонецЕсли;
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ПредставлениеЗаголовка", ТекстЗаголовка);
	ДанныеПечати.Вставить("ПредставлениеОгранизации", ТекстОрганизация);
	ДанныеПечати.Вставить("ПредставлениеКонтрагента", ТекстКонтрагент);
	ДанныеПечати.Вставить("ПредставлниеОснования", ТекстОснования);
	ДанныеПечати.Вставить("ИтогоСумма", ТекстИтого);
	ДанныеПечати.Вставить("СуммаПрописью", ТекстИтогоПрописью);
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	Выборка = ДанныеДокументов.Услуги.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Выборка = ДанныеДокументов.Товары.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры
// }}} repin_pv 19.11.23 
 
#КонецОбласти

#КонецЕсли